server.port=8082
#eureka.client.service-url.defaultZone=http://192.168.31.214:9091/eureka/
eureka.client.service-url.defaultZone=http://cc-eureka-service:9091/eureka/
spring.application.name=cc-admin-meeting-service
#eureka.instance.hostname=${spring.application.name}
eureka.instance.prefer-ip-address=true
# eureka.instance.ip-address=10.162.154.18
spring.datasource.url=jdbc:h2:file:./data/cc-admin-meeting-service;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1

# TODO: need to modify the db
# database
#spring.datasource.url=jdbc:mysql://localhost:3306/advancedSEMeeting?serverTimezone=GMT%2B8
#spring.datasource.username=microservice
#spring.datasource.password=Micro*666
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.show-sql=false
#logging.level.web=debug
# cancel security
# database
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.datasource.platform=h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# article remote
#remote.articleApi=http://localhost:8080
remote.articleApi=http://cc-author-article-service
remote.findArticleById=${remote.articleApi}/article/findArticleById
remote.findArticleByIdNot=${remote.articleApi}/article/findArticleByIdNot
remote.findArticleByMeetingNameAndStatus=${remote.articleApi}/article/findArticleByMeetingNameAndStatus
remote.saveArticle=${remote.articleApi}/article/save
remote.findArticleByContributorNameAndMeetingName=${remote.articleApi}/article/findArticleByContributorNameAndMeetingName

# user remote
#remote.userApi=http://192.168.31.112:8080
remote.userApi=http://cc-user-auth-service
remote.check=${remote.userApi}/check
remote.findUserByUsername=${remote.userApi}/user/username
remote.findUserByName=${remote.userApi}/user/username
remote.findUserByEmail=${remote.userApi}/user/email
remote.findUserById=${remote.userApi}/user/id
remote.findUserByFullnameAndEmail=${remote.userApi}/user/author
remote.savePostMessage=${remote.userApi}/postmessage
remote.findPostMessageByArticleIdAndStatus=${remote.userApi}/postmessage/article
remote.findPostMessageById=${remote.userApi}/postmessage/id

# PCmember remote
#remote.pcmemberApi=http://192.168.31.247:8080
remote.pcmemberApi=http://cc-pcmember-service
remote.findReviewRelationByReviewerIdAndMeetingId=${remote.pcmemberApi}/reviewRelation/findByReviewerIdAndMeetingId
remote.findReviewRelationByReviewStatusAndMeetingId=${remote.pcmemberApi}/reviewRelation/findByReviewStatusAndMeetingId
remote.findReviewRelationByReviewerIdAndArticleId=${remote.pcmemberApi}/reviewRelation/findByReviewerIdAndArticleId
remote.saveReviewRelation=${remote.pcmemberApi}/reviewRelation/save
remote.findReviewRelationByArticleId=${remote.pcmemberApi}/reviewRelation/findReviewRelationsByArticleId
remote.findReviewRelationByMeetingId=${remote.pcmemberApi}/reviewRelation/findByArticleId
remote.saveRebuttal=${remote.pcmemberApi}/rebuttal/save
remote.findRebuttalByArticleId=${remote.pcmemberApi}/rebuttal/findByArticleId
remote.findRebuttalByIdNot=${remote.pcmemberApi}/rebuttal/findByIdNot


#remote.userAuthApi=http://localhost:8080
#remote.meetingApi=http://localhost:8080
#remote.check=${remote.userAuthApi}/check
#remote.findArticleById=${remote.articleApi}/demo/article
#remote.findArticleByContributorName=${remote.articleApi}/demo/article/contributor
#remote.findPcmemberByPcmemberIdAndStatus=${remote.meetingApi}/demo/pcmemberrelation
#remote.findMeetingById=${remote.meetingApi}/demo/meeting/id
#remote.findMeetingByMeetingName=${remote.meetingApi}/demo/meeting/meetingName
#remote.findMeetingByChairName=${remote.meetingApi}/demo/meeting/chair
#remote.findMeetingByStatusAndChairNameNot=${remote.meetingApi}/demo/meeting/chairnot
#remote.findPcmemberRelationByPcmemberIdAndMeetingId=${remote.meetingApi}/demo/pcmemberrelation/pcmemberAndMeeting
#remote.updatePcmemberRelation=${remote.meetingApi}/demo/pcmemberrelation
#remote.findPcmemberRelationByPcmemberIdAndStatusNot=${remote.meetingApi}/demo/pcmemberrelation/not
